openapi: 3.0.1
info:
  title: moody Authentication Service
  description: This is the REST API documentation for the moody auth_service
  version: 1.0.0
servers:
- url: /api
tags:
- name: users
  description: Everything about your Users
- name: auth
  description: Authentication operations
paths:
  /users:
    get:
      tags:
      - users
      summary: Get all users
      description: fetch all existing moody users
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
                      example: Julia
        404:
          description: No users found
          content: {}
        500:
          description: Internal server error
          content: {}
    post:
      tags:
      - users
      summary: Register a new user
      description: a new user is created, persisted in the database and an access
        token is returned.
      requestBody:
        description: User object that will be created
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        201:
          description: User created
          content:
            '*/*':
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNWZhODFhMmQxNTY2NjEwMDNiMDg5OWYyIn0sImlhdCI6MTYwNDg1NTgwOSwiZXhwIjoxNjA1MjE1ODA5fQ.XUZZrYGuUxBk4WQis8VII4GGadFESHwg8Il994WPk04
        400:
          description: Bad Request
          content: {}
        403:
          description: Forbidden - User exists already
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - users
      summary: Delete all registered users
      description: all existing users are deleted (for testing purpose only)
      responses:
        200:
          description: All users removed
          content: {}
        500:
          description: Internal server error
          content: {}
  /auth:
    get:
      tags:
      - auth
      summary: Get user by token
      description: a token must be provided in the authentication header and the related
        user object is returned
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: 5fa81a2d156661003b0899f2
                  username:
                    type: string
                    example: Julia
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: User not found by id
          content: {}
        500:
          description: Internal server error
          content: {}
      security:
      - authentication: []
    post:
      tags:
      - auth
      summary: Login/authenticate user
      description: username and passwords are matched against the existing users and
        upon successful login, a token is returned
      requestBody:
        description: User object that needs to be authenticated
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNWZhODFhMmQxNTY2NjEwMDNiMDg5OWYyIn0sImlhdCI6MTYwNDg1NTgwOSwiZXhwIjoxNjA1MjE1ODA5fQ.XUZZrYGuUxBk4WQis8VII4GGadFESHwg8Il994WPk04
        400:
          description: Bad Request
          content: {}
        403:
          description: Forbidden - User exists already
          content: {}
        404:
          description: Not found - Invalid credentials
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: body
components:
  schemas:
    User:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          example: Hugo
        password:
          type: string
          example: "123456"
  securitySchemes:
    authentication:
      type: apiKey
      name: Authorization
      in: header
